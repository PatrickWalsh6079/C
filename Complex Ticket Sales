// C code
// This code will compute the values of the sales ticket sales for concerts
// and sort the entries by those values
// Developer: Patrick Walsh
// Date: Dec 7, 2019
#include <stdio.h>
#define MAXN 100 // max characters in a group/concert name
#define MAXG 50 // max concerts/groups
#define MAXC 4 // max categories

char group [MAXG][MAXN];
int fans [MAXG][MAXC];
float prices [MAXC];
float sales [MAXG];
float total;
int count = 0;


void printArray () {
     printf ("%15s%5s%5s%5s%5s%10s\n",
     "Concert", "s1", "s2", "s3", "s4", "Sales");
     for (int i = 0; i < count; i++) {
        printf ("%15s", group [i]);
        for (int j = 0; j < MAXC; j++) {
            printf ("%5d", fans[i][j]);
        } // end for each category
     printf ("%10.2f\n", sales [i]);
     } // end for each group
} // end function printArray

void computeSales () {
     for (int i = 0; i < count; i++) {
        sales [i] = 0;
        for (int j = 0; j < MAXC; j++) {
            sales [i] += prices [j] * fans [i][j];
        } // end for each category
     } // end for each group
} // end function computeSales

void switchRows (int m, int n) {
     char tc;
     int ti;
     float v;
     // printf ("Switching %d with %d\n", m, n);
     for (int i = 0; i < MAXN; i++) {
         tc = group [m][i];
         group [m][i] = group [n][i];
         group [n][i] = tc;
     } // end for each character in a group name
     for (int i = 0; i < MAXC; i++) {
         ti = fans [m][i];
         fans [m][i] = fans [n][i];
         fans [n][i] = ti;
     } // end for each fan category
     v = sales [m];
     sales [m] = sales [n];
     sales [n] = v;
} // end switch

int findMinSales (int m) {
     float min = sales [m];
     int target = m;
     for (int i = m+1; i < count; i++)
         if (sales [i] < min) {
             min = sales [i];
             target = i;
        } // end new max found
     return target;
} // end function findMinSales

void sortBySales () {
     int target;
     for (int i = 0; i < count; i++) {
        target = findMinSales (i);
        if (target > i)
            switchRows (i, target);
     } // for each concert
} // end function sortBySales

void getData () {
     // for (int i = 0; i < MAXG; i++) sales [i] = 0;
     printf ("Enter ticket prices in each of %d cateogories: ", MAXC);
     for (int i = 0; i < MAXC; i++)
        scanf ("%f", &prices [i]);
     printf ("-- Enter group and fans in %d categories\n", MAXC);
     printf (" . to finish entries:\n");
     for (int i = 0; i < MAXG; i++) {
        scanf ("%s", &group[i]);
        if (group [i][0] == '.')
            break;
        count++;
        for (int j = 0; j < MAXC; j++)
            scanf ("%d", &fans[i][j]);
     } // end for each group
} // end function getData

void welcome(){
    printf("Welcome to Lab 8!\n\nThis code will compute the values of the sales ticket sales\nfor concerts and sort the entries by those values\n");
    printf("\nDeveloper: Patrick Walsh\n\n");
}

void totalSales(){
     int i;
     for (i = 0; i < MAXG; i++){
        if (sales[i] == 0)
            break;
         total += sales[i];
     } // end of for loop
     printf("\nTotal concert sales: %.2f\n\n", total);
}

int main(void) {
     welcome();
     getData ();
     computeSales ();
     printArray (); // prints header and array
     printf ("\n --- Sorted ---\n\n");
     sortBySales ();
     printArray (); // prints header and array
     totalSales(); // put totalSales function here
     printf("... bye ...\n");
     return 0;
}
